# Generated by Django 4.2.23 on 2025-07-04 10:24

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Unique permission name (e.g., can_view_users, can_edit_accounts)', max_length=100, unique=True)),
                ('codename', models.CharField(help_text='Machine-readable permission code (e.g., view_users, edit_accounts)', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Detailed description of what this permission allows')),
                ('category', models.CharField(choices=[('user_management', 'User Management'), ('account_management', 'Account Management'), ('role_management', 'Role Management'), ('system_admin', 'System Administration'), ('reporting', 'Reporting'), ('onboarding', 'Employee Onboarding'), ('offboarding', 'Employee Offboarding')], help_text='Permission category for grouping', max_length=50)),
                ('level', models.CharField(choices=[('view', 'View Only'), ('create', 'Create'), ('edit', 'Edit'), ('delete', 'Delete'), ('admin', 'Full Admin')], default='view', help_text='Permission level/type', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this permission is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Permission',
                'verbose_name_plural': 'Permissions',
                'db_table': 'permissions',
                'ordering': ['category', 'level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Unique role name (e.g., admin, staff, manager)', max_length=100, unique=True)),
                ('display_name', models.CharField(help_text='Human-readable role name for display', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Detailed description of this role')),
                ('level', models.IntegerField(choices=[(1, 'Super Admin'), (2, 'Account Admin'), (3, 'Manager'), (4, 'Staff'), (5, 'Read Only')], default=4, help_text='Role hierarchy level (lower numbers = higher authority)')),
                ('is_system_role', models.BooleanField(default=False, help_text='Whether this is a system-defined role (cannot be deleted)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this role is currently active')),
                ('is_default', models.BooleanField(default=False, help_text='Whether this role should be assigned to new users by default')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'db_table': 'roles',
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_granted', models.BooleanField(default=True, help_text='Whether this permission is granted or denied')),
                ('constraints', models.JSONField(blank=True, default=dict, help_text='Additional constraints for this permission (JSON format)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='roles_permissions.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='roles_permissions.role')),
            ],
            options={
                'verbose_name': 'Role Permission',
                'verbose_name_plural': 'Role Permissions',
                'db_table': 'role_permissions',
                'ordering': ['role__name', 'permission__category', 'permission__name'],
                'unique_together': {('role', 'permission')},
            },
        ),
        migrations.AddField(
            model_name='role',
            name='permissions',
            field=models.ManyToManyField(blank=True, help_text='Permissions granted to this role', through='roles_permissions.RolePermission', to='roles_permissions.permission'),
        ),
    ]
